#file://cities15000.zip <- http://download.geonames.org/export/dump/cities15000.zip ! download

    
file://cities15000.txt <- file://cities15000.zip
    unzip cities15000.zip
    
    
file://world-cities.csv <- file://cities15000.txt ! python
    import csv
    HEADERS = ['geonameid', 'asciiname', 'name', 'country_code', 'subcountry_code']
    
    infile = 'cities15000.txt'
    outfile = 'world-cities.csv'
    with open(infile) as incsv, \
         open(outfile, 'w') as outcsv:
        reader = csv.reader(incsv, delimiter="\t")
        writer = csv.writer(outcsv, lineterminator="\n")
        writer.writerow(HEADERS)
        for  geonameid, name, asciiname, alternate_names, lng, lat, _, _, country_code, _,  admin1_code,  _,  _,  _,  _,  _,  _,  _,  _  in reader:
            row = (geonameid, asciiname, name, country_code, admin1_code)
            writer.writerow(row)


sqlite://world-cities.sqlite/city <- file://cities15000.txt ! python
    import sqlite3
    import csv
    INFILE = 'cities15000.txt'
    DBFILE = 'world-cities.sqlite'
    
    with open(INFILE) as incsv:
        reader = csv.reader(incsv, delimiter="\t")        
        conn = sqlite3.connect(DBFILE)
        c = conn.cursor()
        c.execute('''CREATE TABLE city
                 (name, asciiname, country_code, subcountry_code, geonameid)''')
        for geonameid, name, asciiname, alternatenames, latitude, longitude, \
          featureclass, featurecode, countrycode, cc2, admin1code, admin2code, \
          admin3code, admin4code, population, elevation, dem, timezone, \
          modificationdate in reader:
            name = str.decode(name, 'utf8')
            asciiname = str.decode(asciiname, 'utf8')
            country_code = str.decode(countrycode, 'utf8')
            subcountry_code = str.decode(admin1code, 'utf8')
            geonameid = str.decode (geonameid, 'utf8')
            c.execute("INSERT INTO city VALUES (?, ?, ?, ?, ?)", (name, asciiname, country_code, subcountry_code, geonameid))
        conn.commit()
        conn.close()

            
#file://admin1CodesASCII.txt <- http://download.geonames.org/export/dump/admin1CodesASCII.txt ! download


sqlite://world-cities.sqlite/admin1 <- file://admin1CodesASCII.txt ! python
    import sqlite3
    import csv
    INFILE = 'admin1CodesASCII.txt'
    DBFILE = 'world-cities.sqlite'
    
    with open(INFILE) as incsv:
        reader = csv.reader(incsv, delimiter="\t")        
        conn = sqlite3.connect(DBFILE)
        c = conn.cursor()
        c.execute('''CREATE TABLE admin1
                 (country_code, subcountry_code, name, asciiname, geonameid)''')
        for code, name, asciiname, geonameid in reader:
            code = str.decode(code, 'utf8')
            country_code, subcountry_code = code.split(u'.', 2)
            name = str.decode(name, 'utf8')
            asciiname = str.decode(asciiname, 'utf8')
            geonameid = str.decode (geonameid, 'utf8')
            c.execute("INSERT INTO admin1 VALUES (?, ?, ?, ?, ?)", (country_code, subcountry_code, name, asciiname, geonameid))
        conn.commit()
        conn.close()

        
#file://countryInfo.txt <- http://download.geonames.org/export/dump/countryInfo.txt ! download


sqlite://world-cities.sqlite/country <- file://countryInfo.txt ! python
    import sqlite3
    import csv
    INFILE = 'countryInfo.txt'
    DBFILE = 'world-cities.sqlite'
    
    def skip_comment(instream):
        for line in instream:
            if line[0] != "#":
                yield line
        
    with open(INFILE) as incsv:
        reader = csv.reader(skip_comment(incsv), delimiter="\t")
        conn = sqlite3.connect(DBFILE)
        c = conn.cursor()
        c.execute('''CREATE TABLE country
                 (country_code, name, geonameid)''')
        for ISO, ISO3, ISONumeric, fips, Country, Capital, Area, \
          Population, Continent, tld, CurrencyCode, CurrencyName, \
          Phone, PostalCodeFormat, PostalCodeRegex, Languages, \
          geonameid, neighbours, EquivalentFipsCode in reader:
            country_code = str.decode(ISO, 'utf8')
            name = str.decode(Country, 'utf8')
            geonameid = str.decode (geonameid, 'utf8')
            c.execute("INSERT INTO country VALUES (?, ?, ?)", (country_code, name, geonameid))
        conn.commit()
        conn.close()

        
file://world-cities.test.csv <- sqlite://world-cities.sqlite/country, sqlite://world-cities.sqlite/admin1, sqlite://world-cities.sqlite/city ! python
    import sqlite3
    import csv
    OUTFILE = 'world-cities.test.csv'
    HEADERS = ['name', 'asciiname', 'country', 'subcountry', 'geonameid']
    DBFILE = 'world-cities.sqlite'
    
    with open(OUTFILE, 'wb') as outcsv:
        writer = csv.writer(outcsv, lineterminator="\n")
        writer.writerow(HEADERS)
        conn = sqlite3.connect(DBFILE)
        c = conn.cursor()
        sql = '''SELECT 
                    city.name, 
                    city.asciiname, 
                    country.name, 
                    admin1.name, 
                    city.geonameid
                 FROM city 
                    LEFT OUTER JOIN country ON city.country_code = country.country_code
                    LEFT OUTER JOIN admin1 ON city.subcountry_code = admin1.subcountry_code AND city.country_code = admin1.country_code
                 '''
        for row in c.execute(sql):
            name, asciiname, country, subcountry, geonameid = row
            name = '' #str.decode(name)
            asciiname = str(asciiname)
            country = str(country)
            subcountry = '' #str(u"{}".format(subcountry))
            geonameid = str(geonameid)
            writer.writerow((name, asciiname, country, subcountry, geonameid))
